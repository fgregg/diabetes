\documentclass{article}
\usepackage{amsmath}
\usepackage{url}
\usepackage{endnotes}
\usepackage{tikz}
\usepackage{subfigure}
\usepackage{rotating}
\pgfrealjobname{field_interviewer}
\usepackage[nogin]{Sweave}
\SweaveOpts{echo=F, width=4.5, height=4.75, prefix.string=/home/fgregg/diabetes/sweave-cache/figs/fig, cache=T, results=hide, keep.source=F}
<<preamble, cache=FALSE>>=
setwd('/home/fgregg/diabetes/analyses')
setCacheDir('/home/fgregg/diabetes/sweave-cache/values')
#pdf.options(maxRaster=256)
#options(SweaveHooks=list(fig=function()
#          par(mar=c(1.1, 1.1, 1.1, 1.1))))
@ 
<<head, cache=F>>=
library(lme4)
library(xtable)
source('loadData.R')
source('Sankey.R')
logit <- function(x) { log(x) - log(1-x) }
expit <- function(x) { exp(x) / (1 + exp(x)) }

@ 

<<loadData>>=
complete <- loadData()
@ 

\begin{document}
\section*{Missing Values}
Of $3,377$ subjects, we have HbA1C measures for $3,037$. The three
main sources of drop-off are subjects refusing to give blood
($N=234$), insufficient sample for an assay ($N=42$), and measurement problems ($N=30$).

\begin{figure}[!ht]
  \centering
<<sankeySample, fig=TRUE, cache=F, width=4.5, height=2.5>>=
blood.spot.status <- table(complete[complete$wave.2, "w2.hba1c.flag"])

par(bty = 'n')
SankeyR(c(sum(blood.spot.status)), 
          c(blood.spot.status['Partial interview'],
            blood.spot.status['HIV'],
            blood.spot.status['Refused'],
            blood.spot.status['Equipment problem'],
            blood.spot.status['Tried, unable to do'],
            blood.spot.status['Not recieved'],
            sum(blood.spot.status[c('No Sample', 'No Data', 'Measured')])
            ),
          "",
        labels=c("Subject",
          "Partial Interview",
          "HIV", "Refused",
          "Equipment problem",
          "Tried, Unable to Do",
          "Not Received by Lab",
          "Received by Lab"))
par(bty = 'o')
@ 
\caption{Dropoff of Subjects to Blood Spots Received by Lab}
\end{figure}

\begin{figure}
  \centering
<<sankeyA1C, fig=TRUE, cache=F, width=4.5, height=2.75>>=
par(bty = 'n')
SankeyR(c(sum(blood.spot.status)), 
        c(sum(blood.spot.status[c("Partial interview",
                             "HIV",
                              "Refused",
                             "Equipment problem",
                             "Tried, unable to do",
                             "Not recieved")]),
          blood.spot.status['No Sample'],
          blood.spot.status['No Data'],
          blood.spot.status['Measured']),
        "",
        labels=c("Subjects",
          "No Sample",
          "No Sample Left",
          "No Data Recorded",
          "HbA1C Measured"))
par(bty = 'o')
@ 
\caption{Dropoff of Subjects to HbA1C Measured}
\end{figure}

\subsection*{Number of Blood Spots}
Field investigators were supposed to collect five blood spots. Of the
$3,113$ samples sent by the lab (including the four that were
apparently lost in transit), $96$\% included five blood spots (table x). 

<<numBloodSpots, cache=F, results=tex>>=
bs.table <- as.table(table(complete$w2.num.blood.spots)[c('1', '2', '3', '4', '5')])
bs.xtable <- xtable(bs.table, caption="Frequency of Samples with One through Five Blood Spots")
names(bs.xtable) <- c("# of Samples")
print(bs.xtable)
@ 

As may be expected, samples with fewer blood spots were less likely to
yield an HbA1C measure.

<<numBloodSpotsXMeasurment, cache=F, results=tex>>=
bs.x.measure.table <- table(complete$w2.num.blood.spots, complete$w2.hba1c.flag)
bs.x.measure.table <- as.table(bs.x.measure.table[c('1', '2', '3','4','5'),
                                                  c("Measured", 
                                                    "No Data", 
                                                    "No Sample")])
xtable(prop.table(bs.x.measure.table, 1) * 100, 
       digits = 0,
       caption="Percentage of Blood Spots that Yielded an HbA1C Measure by Number of Bloods Spots on Sample")
@ 

\subsection*{Selection Bias}
For a variety of reasons, we do not have a measure of HbA1C for $340$
subjects. Can we treat that drop-off as random, or is this drop-off
part of a biased selection process? One way we can proceed is to look
at whether types of subjects who we expect to differ in HbA1C also
differ in how likely we are to have a measure of their HbA1C. 

When we do this, we find we are substantially less likely to have
HbA1C measures from African Americans. It also appears that we are
less likely to have HbA1C measures from respondents who refused to
answer questions about whether they were every diagnosed with diabetes
or high blood sugar. In short, we should not assume that HbA1C
measures are missing at random.

<<selectionBiasEthnic, results=tex, cache=F>>=
measured <- ifelse(is.na(complete$'w2.hba1c.flag') & complete$wave.2,
                   FALSE,
                   complete$w2.hba1c.flag == 'Measured')
race <- summary(glm(measured ~ ethgrp, complete, family = "binomial"))

probs <- expit(c(race$coefficients[1],
                 race$coefficients[1] + race$coefficients[2],
                 race$coefficients[1] + race$coefficients[3],
                 race$coefficients[1] + race$coefficients[4]))

p.values <- c(NA, 
              race$coefficients[2, 4],
              race$coefficients[3, 4],
              race$coefficients[4, 4])

race.tab <- as.table(cbind(probs, p.values))
row.names(race.tab) <- c("White", "Black", "Hispanic", "Other")
colnames(race.tab) <- c("Prob. of HbA1C Meas.", "P Value of Diff. from Whites")

print(xtable(race.tab, caption="Probability of Having an HbA1C Measure by Ethnic Group"), table.placement="!h")
 
@ 

<<selectionBiasGender, results=tex, cache=F>>=
gender <- summary(glm(measured ~ gender, complete, family = "binomial"))

probs <- expit(c(gender$coefficients[1],
                 gender$coefficients[1] + gender$coefficients[2]))

p.values <- c(NA, 
              gender$coefficients[2, 4])

gender.tab <- as.table(cbind(probs, p.values))
row.names(gender.tab) <- c("Men", "Women")
colnames(gender.tab) <- c("Prob. of HbA1C Meas.", "P Value of Diff. from Men")

print(xtable(gender.tab, caption="Probability of Having HbA1C Measure by Gender"), table.placement='!h')
 
@ 

<<selectionBiasAge, results=tex, cache=F>>=
age <- summary(glm(measured ~ scale(w2.age), complete, family = "binomial"))

probs <- expit(c(age$coefficients[1],
                 age$coefficients[1] + age$coefficients[2]))

p.values <- c(NA, 
              age$coefficients[2, 4])

age.tab <- as.table(cbind(probs, p.values))
row.names(age.tab) <- c("Respondent of Average Age (72.5)", "Respondent a Std. Dev. Older (80.6)")
colnames(age.tab) <- c("Prob. of HbA1C Meas.", "P Value of Diff. from Average")

print(xtable(age.tab, caption = "Probability of Having HbA1C Measure, Association with Age"), table.placement="!h")
 
@ 

<<selectionBiasCoMorbidity, results=tex, cache=F>>=
comorbid <- summary(glm(measured ~ I(w2.comorbidity.index - 2), complete, family = "binomial"))

probs <- expit(c(comorbid$coefficients[1],
                 comorbid$coefficients[1] + comorbid$coefficients[2]))

p.values <- c(NA, 
              comorbid$coefficients[2, 4])

comorbid.tab <- as.table(cbind(probs, p.values))
row.names(comorbid.tab) <- c("Resp. with Median Comorbid. (2)", "Respondent w/ Three Comorbid.")
colnames(comorbid.tab) <- c("Prob. of HbA1C Meas.", "P Value of Diff. from Median")

print(xtable(comorbid.tab, caption = "Probability of HbA1C Measure, Association with Comorbidities"), table.placement='!h')
 
@ 


<<selectionBiasDiabetes, results=tex, cache=F>>=
diabetes <- summary(glm(measured ~ w2.diagnosed.diabetes, complete, family = "binomial"))

probs <- expit(c(diabetes$coefficients[1],
                 diabetes$coefficients[1] + diabetes$coefficients[2],
                 diabetes$coefficients[1] + diabetes$coefficients[3],
                 diabetes$coefficients[1] + diabetes$coefficients[4]
                 ))

p.values <- c(NA, 
              diabetes$coefficients[2, 4],
              diabetes$coefficients[3, 4],
              diabetes$coefficients[4, 4]
              )

diabetes.tab <- as.table(cbind(probs, p.values))
row.names(diabetes.tab) <- c("Resp. Reports No Diagnoses", "Resp. Reports Diagnoses", "Resp. Reports `Don't Know'", "Resp. Refuses Answer")
colnames(diabetes.tab) <- c("Prob. of HbA1C Meas.", "P Value of Diff. from Median")

print(xtable(diabetes.tab, caption="Probability of Having HbA1C Measure by Diabetes Status"), table.placement='!h')
 
@ 



<<eval=TRUE>>=
summary(complete[complete$wave.2, "w2.hba1c.flag"])

wave2 <- complete[!is.na(complete$w2.hba1c.whole) &
                  !is.na(complete$ethgrp) &
                  !is.na(complete$gender) &
                  !is.na(complete$w2.age) &
                  !is.na(complete$w2.comorbidity.index) &
                  !is.na(complete$w2.field.investigator), ]
@ 
<<eval=FALSE>>=
model.lmer <- lmer(logit(w2.hba1c.whole/100) ~ 1 + scale(unclass(ethgrp)) + scale(unclass(gender)) + scale(w2.age) + scale(w2.comorbidity.index) + (1|w2.field.investigator),
                wave2, REML=FALSE)

                   
model.lm <- lm(logit(w2.hba1c.whole/100) ~ 1 + scale(unclass(ethgrp)) + scale(unclass(gender)) + scale(w2.age) + scale(w2.comorbidity.index),
               wave2)


lrt.observed <- as.numeric(2*(logLik(model.lmer) - logLik(model.lm)))

nsim <- 999
lrt.sim <- rep(0, nsim)
for (i in 1:nsim) {
  y <- unlist(simulate(model.lm))
  null.model <- lm(y ~ 1 + ethgrp + gender + scale(w2.age) + scale(w2.comorbidity.index), wave2)
  summary(null.model)
  alt.model <- lmer(y ~ 1 + ethgrp + gender + scale(w2.age) + scale(w2.comorbidity.index) + (1|w2.field.investigator),
                    wave2,
                    REML=FALSE)
  lrt.sim[i] <- as.numeric(2*(logLik(alt.model) - logLik(null.model)))
}

mean(lrt.sim > lrt.observed)
@


\section*{Field Interviewer Effects}
Through their practice with the survey instruments and rapport with
subjects, field interviewers may differ in how effective they are in
getting permission to take a subject's blood and how successful they
are in collecting a good blood sample. We would like to how much field
interviewers influence collection rates.

However, subjects are not randomly assigned to field-interviewers so
we if we try to estimate the influence of field investigators we
should expect confounding. 

Fortunately, we have a belief that the field interviewer should not
influence the HbA1C value of an individual assays.  If we can control
for potentially confounding factors, so that our model does not
estimate that field interviewers influence the value of HbA1C, then we
may have more confidence in a similar model of the influence of field
interviewers on collection.

\subsection*{Field Investigator `Effect' on HbA1c'}
<<uncontrolledFI>>=
model.lmer <- lmer(logit(w2.hba1c.whole/100) ~ 1  + (1|w2.field.investigator),
                wave2, REML=FALSE)
max.effect <- (fixef(model.lmer)['(Intercept)'] 
               + max(ranef(model.lmer)$w2.field.investigator))
max.effect <- expit(max.effect) * 100 
min.effect <- (fixef(model.lmer)['(Intercept)']  
               + min(ranef(model.lmer)$w2.field.investigator))
min.effect <- expit(min.effect) * 100
@ 

First, we'll estimate a model of the field interviewer effect without
any controls.  Under this model, if we assigned a random respondent 
to the field investigator with the most positive effect,
the respondent's HbA1C would be expected to be
\Sexpr{round(max.effect,1)}, but if that respondent was assigned to
the field investigator with the most negative effect, the respondent's
HbA1C would be measured at \Sexpr{round(min.effect,1)}. For reference,
the standard deviation of Wave 2 HbA1C is about
\Sexpr{round(sd(na.omit(complete$w2.hba1c.whole), 2))}, so the
estimated field investigator effects are quite substantial. These
effects are also statistically significant beyond the 0.01 level.

Now, let's attempt to control for potential confounders. We'll
statistically control for gender, race and ethnic group (White, Black,
Non-Black Hispanic, Other), age, and health.\footnote{The health
  measure is a count of positive responses to questions about whether
  the subject has had a heart attack, stroke, arthritis, hypertension,
  cancer, and empysema or asthma}. Also, while we don't think a field
interviwere can effect the HbA1C value of a collected blood spot, they
could affect the expected HbA1C value if they are less likely to
collect blood spots from subjects with higher or lower HbA1C
levels. We will attempt to control for this potential censoring by
including the proportion of a HbA1C measures a field investigators
yields in the model.

<<controlledFI>>=
model.lmer <- lmer(logit(w2.hba1c.whole/100) ~  (1 + scale(unclass(ethgrp)) 
                                                 + scale(unclass(gender)) 
                                                 + scale(w2.age) 
                                                 + scale(w2.comorbidity.index)
                                                 + scale(w2.fi.prop.hba1c.measured)
                                                 + (1|w2.field.investigator)
                                                 ),
                   wave2, REML=FALSE)

max.effect <- (fixef(model.lmer)['(Intercept)'] 
               + max(ranef(model.lmer)$w2.field.investigator))
max.effect <- expit(max.effect) * 100 
min.effect <- (fixef(model.lmer)['(Intercept)'] 
               + min(ranef(model.lmer)$w2.field.investigator))
min.effect <- expit(min.effect) * 100

model.lm <- lm(logit(w2.hba1c.whole/100) ~  (1 + scale(unclass(ethgrp)) 
                                             + scale(unclass(gender)) 
                                             + scale(w2.age) 
                                             + scale(w2.comorbidity.index)
                                             + scale(w2.fi.prop.hba1c.measured)
                                             ),
               wave2)

lrt.observed <- as.numeric(2*(logLik(model.lmer) - logLik(model.lm)))

nsim <- 999
lrt.sim <- rep(0, nsim)
for (i in 1:nsim) {
  y <- unlist(simulate(model.lm))
  null.model <- lm(y ~ (1 + scale(unclass(ethgrp)) 
                        + scale(unclass(gender)) 
                        + scale(w2.age) 
                        + scale(w2.comorbidity.index)
                        + scale(w2.fi.prop.hba1c.measured)
                        ),
                   wave2)
  
  alt.model <- lmer(y ~ (1 + scale(unclass(ethgrp)) 
                         + scale(unclass(gender)) 
                         + scale(w2.age) 
                         + scale(w2.comorbidity.index)
                         + scale(w2.fi.prop.hba1c.measured)
                         + (1|w2.field.investigator)
                         ),
                    wave2, REML=FALSE)

  lrt.sim[i] <- as.numeric(2*(logLik(alt.model) - logLik(null.model)))
}

mean(lrt.sim > lrt.observed)

@ 

Under this model, if we assigned our random subject to our extreme field
investigators, we should expect HbA1C measures of
\Sexpr{round(max.effect,1)} and \Sexpr{round(min.effect,1)}. Our
attempt at control have narrowed the size of the estimated field
interviewer effects but they remain large and very statistically
significant.\footnote{Statistical significance was computed by first calculating the log likelihood ratio between a linear model with a field investigator random effect and a nested, null model that excluded the random effect. Second, simulated data was generated from the null model, and a log likelihood ratio was calculated comparing the field investigator and null models on this simulated data. This simulation was done 999 times. The estimate of the p-value is the number of times that the generated log likelihood ratio was bigger than the one calculated from the real data.}

We are faced with two possibilities. Either field investigators really
can effect the value of an HbA1C assay, or we failed to statistically
control for the non-random assignment of subjects to field
investigators. This second possibility seems much more likely.

\subsection*{Field Investigator Effect on Whether HbA1C was Measured}
While the previous exercise may makes us feel dismal about getting a
credible estimate of how much field investigators could influence
whether HbA1C is measured, let's go ahead.

<<whetherFI>>=
wave2 <- complete[complete$wave.2 &
                  !is.na(complete$ethgrp) &
                  !is.na(complete$gender) &
                  !is.na(complete$w2.age) &
                  !is.na(complete$w2.comorbidity.index) &
                  !is.na(complete$w2.field.investigator), ]
wave2$w2.hba1c.measured <- as.numeric(wave2$w2.hba1c.flag == "Measured")
model.glm <- glm(w2.hba1c.measured ~ 1, wave2, family="binomial")
model.glmer <- lmer(w2.hba1c.measured ~ (1 + scale(unclass(ethgrp)) 
                                         + scale(unclass(gender)) 
                                         + scale(w2.age) 
                                         + scale(w2.comorbidity.index) 
                                         + (1|w2.field.investigator)
                                         ),
                   wave2, family="binomial")
max.effect <- (fixef(model.glmer)['(Intercept)'] 
               + max(ranef(model.glmer)$w2.field.investigator))
max.effect <- expit(max.effect) * 100 
min.effect <- (fixef(model.glmer)['(Intercept)'] 
               + min(ranef(model.glmer)$w2.field.investigator))
min.effect <- expit(min.effect) * 100
@ 

Again controlling for gender, race and ethnicity, age, and health, we
expect that if we assign the most successful investigator to a random
recipient, there is a \Sexpr{round(max.effect,2)}\% chance that the
subject's HbA1C will be measured, but if the `worst' field
investigator is there is only a \Sexpr{round(min.effect,2)}. The field
investigator effects are very statistically significant. Of course,
this is all contingent on believing our model.

<<results=tex, cache=F>>=
investigator.effects <- ranef(model.glmer)$w2.field.investigator
investigator.effects <- data.frame(row.names(investigator.effects),
                                   investigator.effects[,1])
worst.10 <- investigator.effects[order(investigator.effects[,2]),][1:10,]
worst.10[,2] <- expit(worst.10[,2] + fixef(model.glmer)['(Intercept)']) 
worst.10.table <- xtable(data.frame(worst.10),
                         caption="Most Unsuccesful Field Investigators, Estimated", align="rrl")
names(worst.10.table) <- c("Field Investigator ID", 
                           "Expected Chance of Getting HbA1C Measure")
print(worst.10.table, include.rownames=FALSE)
@ 

\section*{Heterogenity over field period}
\begin{figure}
  \centering
<<date, fig=TRUE>>=
complete.loess <- complete[!is.na(complete$w2.date),]
centered.date <- as.numeric(complete.loess$w2.date 
                            - mean(complete.loess$w2.date)
                            )
                            

fit <- loess(logit(w2.hba1c.whole/100) ~ centered.date, 
             complete.loess)


x.date <- seq(min(complete.loess$w2.date), 
              max(complete.loess$w2.date), 
              length=100)
x <- seq(from=min(centered.date),
         to=max(centered.date), 
         length = 100)
plot(complete.loess$w2.date,
     complete.loess$w2.hba1c.whole, 
     col="#00000055",
     xlab="Field Date",
     ylab="HbA1C",
     main="Changes in Average HbA1C over Field Period")
lines(expit(predict(fit, x))*100 ~ x.date, col="red")

begin <- expit(predict(fit, min(centered.date)))*100
end <- expit(predict(fit, max(centered.date)))*100
@ 
\caption{Field Heterogeneity}
\end{figure}

There was a small decline in expected HbA1C values over the field
period. At the beginning of the period, the expected assayed value is \Sexpr{round(begin,2)} and at the end it's \Sexpr{round(end,2)}.



\newpage
\section*{Delay to Assay}
There does not seem to be any relationship between the HbA1C and the length of time between collection of a blood spot and when it is assayed. When we regress the logit of HbA1C against this delay, the coefficient is nearly zero and the p.value is above 0.95.

However, there is one anomaly in this data. Subject 10042271 was
apparently interviewed on 6/10/2011 (variable `CurrDate'), but her
blood spot was assayed six months earlier on 12/272010 (variable
`ASSAY\_DATE'). This subject was removed from the above analysis;
including her does not change the results substantively.
\begin{figure}
  \centering
<<delay, fig=TRUE>>=
delay <- as.numeric(complete$w2.hba1c.assay.date - as.Date(complete$w2.date))
delay[delay < 0] <- NA
delay.analysis <- lm(logit(w2.hba1c.whole/100) ~ delay, complete)
plot(w2.hba1c.whole ~ delay, 
     complete, 
     ylab="HbA1C",
     xlab="Days from Blood Spot Collection to Assay",
     main="HbA1C and Assay Delay")
lines(delay.analysis$model$delay, expit(delay.analysis$fitted)*100,  col="red")
@ 
\caption{HbA1C and Assay Delay, red line is regression line}
\end{figure}
\newpage





\begin{figure}
<<histW2hbA1C, fig=TRUE>>=
  brks = seq(3.5, 15, 0.5)
  hist(complete$w2.hba1c.whole, main="Wave 2 HbA1C", xlab="", 
       breaks=brks, xaxt="n")
  axis(1, at=brks, cex.axis = .7)

@ 
\caption{Wave 2 Histogram}
\end{figure}
\end{document}
